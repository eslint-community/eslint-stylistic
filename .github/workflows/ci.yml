name: CI

on:
  push:
    branches:
      - main
      - dev

  pull_request:
    branches:
      - main
      - dev

  merge_group: {}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install pnpm
        uses: pnpm/action-setup@v2

      - name: Set node
        uses: actions/setup-node@v3
        with:
          node-version: lts/*

      - name: Setup
        run: npm i -g @antfu/ni

      - name: Install
        run: nci

      - name: Build
        run: nr build

      - name: Lint
        run: nr lint

  typecheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install pnpm
        uses: pnpm/action-setup@v2

      - name: Set node
        uses: actions/setup-node@v3
        with:
          node-version: lts/*

      - name: Setup
        run: npm i -g @antfu/ni

      - name: Install
        run: nci

      - name: Typecheck
        run: nr typecheck

  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        node: [lts/*]
        os: [ubuntu-latest]
        eslint: [default, ^7, ^6]
        include:
          - node: lts/*
            os: windows-latest
            eslint: default
          - node: lts/*
            os: macos-latest
            eslint: default
      fail-fast: false

    steps:
      - uses: actions/checkout@v3

      - name: Install pnpm
        uses: pnpm/action-setup@v2

      - name: Set node ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: Switch ESLint version to ${{ matrix.eslint }}
        run: node ./scripts/switch-eslint-version.js ${{ matrix.eslint }}
        if: ${{ matrix.eslint != 'default' }}

      - name: Setup
        run: npm i -g @antfu/ni

      - name: Install
        run: nci

      - name: Build
        run: nr build

      - name: Test
        run: nr test
        if: ${{ matrix.node != 'lts/*' || matrix.os != 'ubuntu-latest' }}

      - name: Test with coverage
        run: nr test --coverage
        if: ${{ matrix.node == 'lts/*' && matrix.os == 'ubuntu-latest' }}

      - name: Report coverage
        uses: codecov/codecov-action@v3
        if: ${{ matrix.node == 'lts/*' && matrix.os == 'ubuntu-latest' }}
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Fixtures
        run: nr test:fixtures
        if: ${{ matrix.eslint == 'default' }}
